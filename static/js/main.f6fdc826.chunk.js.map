{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","completed","title","person","TodoList","list","map","id","username","userId","usersFromServer","find","App","useState","setTitle","setUser","titleError","setTitleError","userError","setUserError","action","method","onSubmit","e","preventDefault","sortedList","sort","a","b","length","pers","newTodo","handleSubmit","type","placeholder","onChange","target","value","disabled","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6fdc826.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user:User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={user.email}>\n    {user.name}\n  </a>\n);\n","import { UserInfo } from '../UserInfo/UserInfo';\nimport { List } from '../../types/List';\n\ntype Props = {\n  todo: List;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article data-id=\"1\" className={`TodoInfo ${todo.completed && 'TodoInfo--completed'}`}>\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    {\n      todo.person && (\n        <UserInfo user={todo.person} />\n      )\n    }\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { List } from '../../types/List';\n\ntype Props = {\n  list:List[];\n};\n\nexport const TodoList: React.FC<Props> = ({ list }) => (\n  <section className=\"TodoList\">\n    {\n      list.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))\n    }\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { List } from './types/List';\n\nlet list: List[] = [...todosFromServer].map(todo => {\n  const person = usersFromServer\n    .find(user => user.id === todo.userId) || null;\n\n  return { ...todo, person };\n});\n\nexport const App:React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('Please choose a user');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (title === '' || user === 'Please choose a user') {\n      if (title === '') {\n        setTitleError(true);\n      }\n\n      if (user === 'Please choose a user') {\n        setUserError(true);\n      }\n\n      return;\n    }\n\n    const sortedList = [...list].sort((a, b) => a.id - b.id);\n    const id = sortedList[sortedList.length - 1].id + 1;\n    const person = usersFromServer\n      .find(pers => pers.name === user) || null;\n\n    const userId = usersFromServer\n      .find(pers => pers.name === user)?.id || null;\n\n    const newTodo: List = {\n      id,\n      title,\n      completed: false,\n      userId,\n      person,\n    };\n\n    list = [...list, newTodo];\n\n    setTitle('');\n    setUser('Please choose a user');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(e) => {\n          handleSubmit(e);\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter title\"\n            data-cy=\"titleInput\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setTitle(e.target.value);\n              setTitleError(false);\n            }}\n            value={title}\n          />\n          {\n            titleError && (\n              <span className=\"error\">Please enter a title</span>\n            )\n          }\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            onChange={(e) => {\n              setUser(e.target.value);\n              setUserError(false);\n            }}\n            value={user}\n          >\n            <option\n              value=\"Please choose a user\"\n              key=\"-1\"\n              disabled\n            >\n              Please choose a user\n            </option>\n            {\n              usersFromServer.map(element => (\n                <option\n                  value={element.name}\n                  key={element.id}\n                >\n                  {element.name}\n                </option>\n              ))\n            }\n          </select>\n          {\n            userError && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList list={list} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}